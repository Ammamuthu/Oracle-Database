++++++++++++++++++++++++++++++++++++++++++++++++++ Make sure Take a spool ++++++++++++++++++++++++++++++++++++++++++++++++++

1.) Check Disk/ASM storage :
----------------------------

SELECT NAME, STATE, TYPE, 
     ROUND(TOTAL_MB / 1024, 2) "SIZE_GB",
     ROUND(FREE_MB / 1024, 2) "AVAILABLE_GB",
     ROUND((total_mb - free_mb) / total_mb * 100, 2) AS "USED%"
FROM v$asm_diskgroup;

2.) Get the size Excl before Activity :
---------------------------------------

SET PAGESIZE 5000
SET MARKUP HTML ON ENTMAP OFF SPOOL ON PREFORMAT OFF;
SPOOL ./Before_SEGMENT_Type.xls;
SELECT 
    owner,
    table_name,
    segment_type,
    SUM(in_bytes) / 1024 / 1024 AS in_mb
FROM (
SELECT 
        (SELECT owner FROM dba_lobs WHERE segment_name = a.segment_name AND ROWNUM = 1) AS owner,
        (SELECT table_name FROM dba_lobs WHERE segment_name = a.segment_name AND ROWNUM = 1) AS table_name,
        a.segment_type,
        SUM(a.bytes) AS in_bytes
    FROM dba_segments a
    WHERE a.owner IN ('TRANS', 'IMS_MM', 'RTGS_MT', 'RTGS')
      AND a.segment_type IN ('LOB PARTITION', 'LOBSEGMENT')
    GROUP BY a.segment_name, a.segment_type
UNION ALL
    SELECT 
        a.owner,
        a.segment_name AS table_name,
        a.segment_type,
        SUM(a.bytes) AS in_bytes
    FROM dba_segments a
    WHERE a.owner IN ('TRANS', 'IMS_MM', 'RTGS_MT', 'RTGS')
      AND a.segment_type IN ('NESTED TABLE', 'TABLE PARTITION', 'TABLE', 'TABLE SUBPARTITION')
    GROUP BY a.owner, a.segment_name, a.segment_type
)
GROUP BY owner, table_name, segment_type
ORDER BY in_mb DESC;
spool off;


3.) Disable job
------------
spool Pre_check.log

select name,open_mode,database_role from v$database;

COL JOB_NAME for a35
COL STATE for a30
select job_name, state from dba_scheduler_jobs where owner in ('TRANS', 'IMS_MM', 'RTGS_MT', 'RTGS');


SELECT 'EXEC DBMS_SCHEDULER.DISABLE(''' || owner || '.' || job_name || ''');'
FROM dba_scheduler_jobs
WHERE owner IN ('TRANS', 'IMS_MM', 'RTGS_MT', 'RTGS');

Run the O/P
-----------

Select job_name, state from dba_scheduler_jobs where owner in ('TRANS', 'IMS_MM', 'RTGS_MT', 'RTGS');


4.) Restore Point Creation
---------------------------

create restore point DAY1_REORG GUARANTEE FLASHBACK DATABASE;

select GUARANTEE_FLASHBACK_DATABASE,NAME,to_char(SCN), TIME from v$restore_point;

Select count(*) from dba_objects where status='INVALIDS';


5.) FRA usage check frequently after the Restore point creation :
-----------------------------------------------------------------

set linesize 500
col NAME for a50
select name, ROUND(SPACE_LIMIT/1024/1024/1024,2) "Allocated Space(GB)", 
round(SPACE_USED/1024/1024/1024,2) "Used Space(GB)",
round(SPACE_RECLAIMABLE/1024/1024/1024,2) "SPACE_RECLAIMABLE (GB)" ,
(select round(ESTIMATED_FLASHBACK_SIZE/1024/1024/1024,2) 
from V$FLASHBACK_DATABASE_LOG) "Estimated Space (GB)"
from V$RECOVERY_FILE_DEST;


spool Off;


post check
===========



SPOOL post_check.log


1.) ENABLE job
------------

select name,open_mode,database_role from v$database;


COL JOB_NAME for a35
COL STATE for a30
select job_name, state from dba_scheduler_jobs where owner in ('TRANS', 'IMS_MM', 'RTGS_MT', 'RTGS');


SELECT 'EXEC DBMS_SCHEDULER.ENABLE(''' || owner || '.' || job_name || ''');'
FROM dba_scheduler_jobs
WHERE owner IN ('TRANS', 'IMS_MM', 'RTGS_MT', 'RTGS');

select job_name, state from dba_scheduler_jobs where owner in ('TRANS', 'IMS_MM', 'RTGS_MT', 'RTGS');

2.) Compile invalid objects :
-----------------------------

BEGIN
SYS.PROC_COMPILE_INVALID_OBJECTS;
END;
/  

3.) Get the size Excl before Activity :
---------------------------------------

SET PAGESIZE 5000
SET MARKUP HTML ON ENTMAP OFF SPOOL ON PREFORMAT OFF;
SPOOL ./After_SEGMENT_Type.xls;
SELECT 
    owner,
    table_name,
    segment_type,
    SUM(in_bytes) / 1024 / 1024 AS in_mb
FROM (
SELECT 
        (SELECT owner FROM dba_lobs WHERE segment_name = a.segment_name AND ROWNUM = 1) AS owner,
        (SELECT table_name FROM dba_lobs WHERE segment_name = a.segment_name AND ROWNUM = 1) AS table_name,
        a.segment_type,
        SUM(a.bytes) AS in_bytes
    FROM dba_segments a
    WHERE a.owner IN ('TRANS', 'IMS_MM', 'RTGS_MT', 'RTGS')
      AND a.segment_type IN ('LOB PARTITION', 'LOBSEGMENT')
    GROUP BY a.segment_name, a.segment_type
UNION ALL
    SELECT 
        a.owner,
        a.segment_name AS table_name,
        a.segment_type,
        SUM(a.bytes) AS in_bytes
    FROM dba_segments a
    WHERE a.owner IN ('TRANS', 'IMS_MM', 'RTGS_MT', 'RTGS')
      AND a.segment_type IN ('NESTED TABLE', 'TABLE PARTITION', 'TABLE', 'TABLE SUBPARTITION')
    GROUP BY a.owner, a.segment_name, a.segment_type
)
GROUP BY owner, table_name, segment_type
ORDER BY in_mb DESC;
spool off;


4.)Drop Restore point:
----------------------

select GUARANTEE_FLASHBACK_DATABASE,NAME,to_char(SCN) ,TIME from v$restore_point;

drop restore point DAY1_BEFORE;

Spool Off;




